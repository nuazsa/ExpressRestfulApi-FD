openapi: 3.1.0
info:
  title: StoryShare API Docs
  description: API designed for posting and sharing short stories, similar to tweet-style posts
  version: 1.0.0

servers:
  - url: http://localhost:3000/api

paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /story:
    get:
      summary: Get all stories
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Everything went fine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryListResponse'
        "404":
          description: Data not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'
    post:
      summary: Upload story
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - description
              properties:
                description:
                  type: string
              
      responses:
        "200":
          description: Everything went fine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryResponse'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'


  /story/{id}:
    get:
      summary: Get story by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer    
      responses:
        "200":
          description: Everything went fine.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryResponse'
        "404":
          description: Story not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'

  /logout:
    post:
      summary: Logout the current user
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalErrorResponse'


components:
  schemas:
    StoryItem:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time

    StoryResponse:
      type: object
      properties:
        error:
          type: boolean
        message:
          type: string
        data:
            $ref: '#/components/schemas/StoryItem'

    StoryListResponse:
      type: object
      properties:
        error:
          type: boolean
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/StoryItem'
            
    AuthResponse:
      type: object
      properties:
        error:
          type: boolean
        message:
          type: string
        data:
          type: object
          properties:
            user:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                email:
                  type: string
                  format: email
            token:
              type: string

    ErrorResponse:
      type: object
      properties:
        error:
          type: boolean
        message:
          type: string

    InternalErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            requestId:
              type: string
              format: uuid

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
